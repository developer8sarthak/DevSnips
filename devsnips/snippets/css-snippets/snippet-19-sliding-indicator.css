/*
 * Sliding Hover Menu Indicator
 * Smooth sliding indicator for navigation menus
 * 
 * Features:
 * - Pure CSS implementation
 * - Smooth transitions
 * - Multiple animation styles
 * - Supports RTL
 * - Accessible states
 * 
 * Usage:
 * <nav class="slide-menu">
 *   <a href="#" class="slide-menu__item">Item 1</a>
 *   <a href="#" class="slide-menu__item">Item 2</a>
 *   <span class="slide-menu__indicator"></span>
 * </nav>
 */

/* Root variables */
:root {
  --menu-height: 48px;
  --menu-color: #333;
  --menu-active: #4a90e2;
  --menu-timing: 0.3s;
  --menu-indicator-height: 2px;
}

/* Container */
.slide-menu {
  position: relative;
  display: flex;
  align-items: center;
  height: var(--menu-height);
  background: white;
}

/* Menu items */
.slide-menu__item {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  padding: 0 1.5rem;
  color: var(--menu-color);
  text-decoration: none;
  font-size: 1rem;
  font-weight: 500;
  transition: color var(--menu-timing) ease;
  z-index: 1;
}

/* Hover and active states */
.slide-menu__item:hover,
.slide-menu__item--active {
  color: var(--menu-active);
}

/* Sliding indicator */
.slide-menu__indicator {
  position: absolute;
  left: 0;
  bottom: 0;
  height: var(--menu-indicator-height);
  background: var(--menu-active);
  transition: width var(--menu-timing) ease,
              transform var(--menu-timing) ease;
  pointer-events: none;
}

/* Indicator animation on hover */
.slide-menu__item:nth-child(1):hover ~ .slide-menu__indicator {
  transform: translateX(0);
  width: calc(100% / var(--menu-items) * 1);
}

.slide-menu__item:nth-child(2):hover ~ .slide-menu__indicator {
  transform: translateX(calc(100% / var(--menu-items) * 1));
  width: calc(100% / var(--menu-items) * 1);
}

.slide-menu__item:nth-child(3):hover ~ .slide-menu__indicator {
  transform: translateX(calc(100% / var(--menu-items) * 2));
  width: calc(100% / var(--menu-items) * 1);
}

.slide-menu__item:nth-child(4):hover ~ .slide-menu__indicator {
  transform: translateX(calc(100% / var(--menu-items) * 3));
  width: calc(100% / var(--menu-items) * 1);
}

/* Vertical variant */
.slide-menu--vertical {
  flex-direction: column;
  height: auto;
  width: 200px;
}

.slide-menu--vertical .slide-menu__item {
  width: 100%;
  justify-content: flex-start;
  padding: 1rem 1.5rem;
}

.slide-menu--vertical .slide-menu__indicator {
  top: 0;
  left: 0;
  width: 2px;
  height: var(--menu-height);
}

/* Curved indicator variant */
.slide-menu--curved .slide-menu__indicator {
  border-radius: var(--menu-indicator-height);
}

/* Gradient indicator variant */
.slide-menu--gradient .slide-menu__indicator {
  background: linear-gradient(to right, var(--menu-active), #67b26f);
}

/* Pill indicator variant */
.slide-menu--pill {
  --menu-height: 40px;
  padding: 0.25rem;
  border-radius: 50px;
  background: #f5f5f5;
}

.slide-menu--pill .slide-menu__indicator {
  height: calc(var(--menu-height) - 0.5rem);
  bottom: 0.25rem;
  border-radius: 50px;
  background: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Responsive styles */
@media (max-width: 768px) {
  .slide-menu {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  .slide-menu__item {
    padding: 0 1rem;
    font-size: 0.875rem;
  }
  
  .slide-menu--vertical {
    width: 100%;
    overflow-x: hidden;
  }
}

/* RTL support */
[dir="rtl"] .slide-menu__indicator {
  left: auto;
  right: 0;
}

/* Fade effect variant */
.slide-menu--fade .slide-menu__item {
  transition: color var(--menu-timing) ease,
              opacity var(--menu-timing) ease;
}

.slide-menu--fade .slide-menu__item:not(:hover):not(.slide-menu__item--active) {
  opacity: 0.6;
}

/* Icon support */
.slide-menu__icon {
  width: 20px;
  height: 20px;
  margin-right: 0.5rem;
}

/* High contrast mode */
@media (forced-colors: active) {
  .slide-menu__indicator {
    background: CanvasText;
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .slide-menu {
    --menu-timing: 0s;
  }
}

/* JavaScript helper to set menu items count:
document.querySelectorAll('.slide-menu').forEach(menu => {
  const itemsCount = menu.querySelectorAll('.slide-menu__item').length;
  menu.style.setProperty('--menu-items', itemsCount);
});
*/