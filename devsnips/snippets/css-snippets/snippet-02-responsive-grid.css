/*
 * Responsive CSS Grid Layout
 * Modern auto-adjusting grid system using CSS Grid
 * 
 * Features:
 * - Automatically adjusts columns based on container width
 * - Maintains minimum column width
 * - Responsive gaps
 * - Equal-width columns by default
 * - Supports custom column spans
 * 
 * Usage:
 * <div class="responsive-grid">
 *   <div class="grid-item">Content</div>
 *   <!-- Add more items as needed -->
 * </div>
 */

/* Base grid container */
.responsive-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
  gap: clamp(1rem, 3vw, 2rem);
  width: 100%;
  padding: 1rem;
  box-sizing: border-box;
}

/* Tight variant with smaller gaps */
.responsive-grid-tight {
  gap: clamp(0.5rem, 2vw, 1rem);
}

/* Wide variant with larger gaps */
.responsive-grid-wide {
  gap: clamp(1.5rem, 4vw, 3rem);
}

/* 2-column variant */
.responsive-grid-2 {
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 450px), 1fr));
}

/* 3-column variant */
.responsive-grid-3 {
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 350px), 1fr));
}

/* 4-column variant */
.responsive-grid-4 {
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 250px), 1fr));
}

/* Grid item base styles */
.grid-item {
  width: 100%;
  height: 100%;
}

/* Full-width item override */
.grid-item-full {
  grid-column: 1 / -1;
}

/* Double-width item */
.grid-item-double {
  grid-column: auto / span 2;
}

/* Masonry-like variant */
@supports (grid-template-rows: masonry) {
  .responsive-grid-masonry {
    grid-template-rows: masonry;
    align-items: start;
  }
}

/* Fallback for older browsers */
@supports not (grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr))) {
  .responsive-grid {
    display: flex;
    flex-wrap: wrap;
    margin: -0.5rem;
  }
  
  .responsive-grid > * {
    flex: 1 1 300px;
    margin: 0.5rem;
  }
}